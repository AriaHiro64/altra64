jobs:
- job: Windows
  pool:
    vmImage: 'vs2017-win2016'

  variables:
    outputStorageUri: ''
    outputStorageContainerSasToken: ''
    binaryVersion: '$(Year:yy)$(DayOfYear)$(Rev:r)'

  steps:
  - script: |
      curl -L https://dl.bintray.com/n64-tools/mips64-gcc-toolchain/gcc-toolchain-mips64-win64-8.2.0-20181107.6.zip --output gcc-toolchain-mips64-win64.zip
      curl -L https://dl.bintray.com/n64-tools/libdragon/libdragon-win64-20181211.4.zip --output libdragon-win64.zip
    displayName: 'Get dependencies'
    continueOnError: false

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: 'gcc-toolchain-mips64-win64.zip' 
      destinationFolder: gcc-toolchain-mips64
      cleanDestinationFolder: false 
    displayName: 'Extract gcc-toolchain-mips64-win64'
    continueOnError: false

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: 'libdragon-win64.zip' 
      destinationFolder: libdragon
      cleanDestinationFolder: false 
    displayName: 'Extract libdragon-win64'
    continueOnError: false

  - task: PowerShell@2
    inputs:
        targetType: 'inline'
        script: |
          $path = "$($Env:BUILD_SOURCESDIRECTORY)\inc\os.h"
          # should possibly be setting this through the make file!
          $versionStr = '#define OS_BUILD_VERSION "' + $Env:Build_BuildNumber + '"'
          (Get-Content $path).Replace('#define OS_BUILD_VERSION "0"',$versionStr) | Set-Content $path
        errorActionPreference: 'stop'
        failOnStderr: 'false'
    displayName: Update build version

  - task: PowerShell@2
    inputs:
        targetType: 'inline'
        script: |
          # needs converting to proper powershell or bash!
          cmd.exe /c "set PATH=%PATH%;%BUILD_SOURCESDIRECTORY%\gcc-toolchain-mips64\bin"
          cmd.exe /c "md bin"
          cmd.exe /c "md obj"
          If ($Env.Build_SourceBranchName -eq "master") {
            cmd.exe /c "make"
          }
          Else {
            cmd.exe /c "make debug"
          }
        errorActionPreference: 'stop'
        failOnStderr: 'false'
    displayName: 'Build ROM'
    continueOnError: false

  - task: CopyFiles@2
    inputs:
      sourceFolder: $(Build.SourcesDirectory)
      contents: 'bin\*.v64' 
      targetFolder: $(Build.ArtifactStagingDirectory)
      flattenFolders: true
    displayName: 'Copy ROM'
    continueOnError: false

  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)'
      artifactName: 'binaries' 
      publishLocation: 'Container'
    displayName: Publish Build Artifacts
    continueOnError: false
